---
import "../styles/global.css";

interface Props {
  title: string;
  description: string;
  children: any;
}

const { title, description, children } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="h-full bg-gray-50">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} | AutoGrid</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  </head>
  <body class="h-full">
    <div class="min-h-full flex">
      <div class="flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24">
        <div class="mx-auto w-full max-w-sm lg:w-96">
          <div class="text-center lg:text-left">
            <div class="flex items-center justify-center lg:justify-start">
              <svg width="32" height="32" viewBox="0 0 32 32" class="text-blue-600">
                <rect x="4" y="4" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="13" y="4" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="22" y="4" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="4" y="13" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="13" y="13" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="22" y="13" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="4" y="22" width="6" height="6" fill="currentColor" rx="1" />
                <rect x="13" y="22" width="6" height="6" fill="currentColor" rx="1" />
                <path d="M22 26L26 22L30 26L26 30L22 26Z" fill="#10B981" />
              </svg>
              <span class="ml-2 text-2xl font-bold text-gray-900">AutoGrid</span>
            </div>
            <h2 class="mt-6 text-3xl font-extrabold text-gray-900">{title}</h2>
            <p class="mt-2 text-sm text-gray-600">
              {description}
            </p>
          </div>

          <div class="mt-8">
            <div class="mt-6">
              <slot />
            </div>
          </div>
        </div>
      </div>
      <div class="hidden lg:block relative w-0 flex-1 overflow-hidden bg-gradient-to-br from-blue-700 to-blue-900">
        <div class="absolute inset-0 h-full w-full flex items-center justify-center p-12">
          <div class="text-white max-w-md w-full">
            <h2 class="text-3xl font-bold mb-4 text-center">Start your journey</h2>
            <p class="text-slate-200 text-center mb-8">Organize all your job opportunities from LinkedIn, Indeed, Glassdoor and more in one smart grid</p>
            
            <div class="bg-slate-800/70 backdrop-blur-sm rounded-xl p-6 border border-slate-600/30">
              <div class="flex justify-between mb-6">
                {['LinkedIn', 'Indeed', 'Glassdoor', 'Others'].map((source, i) => {
                  const jobCount = [25, 18, 12, 8][i];
                  return (
                    <div class="bg-slate-700/50 rounded-lg p-2 text-center w-[22%] hover:bg-slate-700/70 transition-colors">
                      <div class="text-xs font-medium text-slate-100">{source}</div>
                      <div class="text-2xs text-slate-300 mt-0.5">
                        {jobCount} {jobCount === 1 ? 'job' : 'jobs'}
                      </div>
                    </div>
                  );
                })}
              </div>
              
              <div class="flex justify-center mb-6">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="text-slate-400 animate-bounce">
                  <path d="M12 5v14m0 0l-5-5m5 5l5-5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </div>
              
              <div class="bg-slate-700/50 rounded-lg p-4 border border-slate-600/50">
                <div class="text-center text-sm font-medium text-slate-100 mb-4">Your Organized Job Grid</div>
                
                <div class="grid grid-cols-3 gap-3 mb-3">
                  {['Frontend Dev', 'UX Designer', 'Product Mgr', 'Data Scientist', 'Backend Dev', 'Full Stack'].map((job, i) => {
                  // Determine status color based on index
                  let statusColor = '';
                  if ([0, 4].includes(i)) statusColor = 'bg-emerald-400';
                  else if ([1, 5].includes(i)) statusColor = 'bg-amber-400';
                  else if (i === 2) statusColor = 'bg-violet-400';
                  else if (i === 3) statusColor = 'bg-rose-400';
                  
                  return (
                    <div class="bg-slate-600/30 rounded p-2 border border-slate-500/20 hover:bg-slate-600/40 transition-colors relative group">
                      <div class="h-2 bg-slate-500/40 rounded-full mb-2 group-hover:bg-slate-400/60 transition-colors"></div>
                      <div class="h-1.5 bg-slate-500/30 rounded-full mb-1 w-3/4 group-hover:bg-slate-400/40 transition-colors"></div>
                      <div class="h-1.5 bg-slate-500/30 rounded-full w-1/2 group-hover:bg-slate-400/40 transition-colors"></div>
                      <div class={`absolute top-1.5 right-1.5 w-2 h-2 rounded-full ${statusColor}`}></div>
                    </div>
                  );
                })}
                </div>
                
                <div class="grid grid-cols-3 gap-1 text-center text-[10px] text-slate-300 mt-2">
                  <div class="flex items-center justify-center">
                    <svg class="w-3 h-3 mr-1 text-emerald-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    All sources
                  </div>
                  <div class="flex items-center justify-center">
                    <svg class="w-3 h-3 mr-1 text-emerald-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    Smart tracking
                  </div>
                  <div class="flex items-center justify-center">
                    <svg class="w-3 h-3 mr-1 text-emerald-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    Real-time
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="absolute inset-0 bg-gradient-to-b from-transparent to-slate-900/40"></div>
        </div>
        
        <style>
          
          @keyframes verticalPulse {
            0%, 100% { 
              transform: scaleY(1); 
              opacity: 0.3;
              background: linear-gradient(to bottom, transparent, rgba(255, 255, 255, 0.5), transparent);
            }
            50% { 
              transform: scaleY(1.3); 
              opacity: 0.8;
              background: linear-gradient(to bottom, transparent, rgba(255, 255, 255, 0.8), transparent);
            }
          }
          
          @keyframes horizontalPulse {
            0%, 100% { 
              transform: scaleX(1); 
              opacity: 0.3;
              background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.5), transparent);
            }
            50% { 
              transform: scaleX(1.3); 
              opacity: 0.8;
              background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.8), transparent);
            }
        </style>
      </div>
    </div>
  </body>
</html>

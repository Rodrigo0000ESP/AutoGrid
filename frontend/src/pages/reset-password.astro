---
import AuthLayout from '../layouts/AuthLayout.astro';
import '../styles/global.css';

const title = 'Set a new password';
const description = 'Enter and confirm your new password';
---

<AuthLayout {title} {description}>
  <form id="resetPasswordForm" class="mt-8 space-y-6">
    <div class="rounded-md shadow-sm space-y-4">
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700">New password</label>
        <input
          id="password"
          name="password"
          type="password"
          required
          minlength="8"
          class="appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
          placeholder="Enter new password"
        />
      </div>
      <div>
        <label for="confirm" class="block text-sm font-medium text-gray-700">Confirm password</label>
        <input
          id="confirm"
          name="confirm"
          type="password"
          required
          minlength="8"
          class="appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
          placeholder="Confirm new password"
        />
      </div>
    </div>

    <div id="resetPasswordMessage" class="hidden text-sm"></div>

    <div>
      <button
        id="resetPasswordSubmit"
        type="submit"
        class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
      >
        Update password
      </button>
    </div>
  </form>

  <div class="mt-6 text-center text-sm">
    <p class="text-gray-600">
      Remembered it?{' '}
      <a href="/login" class="font-medium text-blue-600 hover:text-blue-500">
        Sign in
      </a>
    </p>
  </div>

  <script is:inline>
    (function () {
      const init = async () => {
        const form = document.getElementById('resetPasswordForm');
        const submitBtn = document.getElementById('resetPasswordSubmit');
        const messageDiv = document.getElementById('resetPasswordMessage');
        if (!form || !submitBtn) return;

        // Read token from URL
        const params = new URLSearchParams(window.location.search);
        const token = params.get('token') || '';
        if (!token) {
          if (messageDiv) {
            messageDiv.textContent = 'Missing or invalid token. Please use the link from your email.';
            messageDiv.className = 'text-red-600 text-sm mt-2';
            messageDiv.style.display = 'block';
          }
          submitBtn.disabled = true;
          return;
        }

        const { resetPassword } = await import('/src/services/emailService.ts');

        const show = (msg, ok = true) => {
          if (!messageDiv) return;
          messageDiv.textContent = msg;
          messageDiv.className = ok ? 'text-green-600 text-sm mt-2' : 'text-red-600 text-sm mt-2';
          messageDiv.style.display = 'block';
        };

        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          const password = String((document.getElementById('password') || {}).value || '').trim();
          const confirm = String((document.getElementById('confirm') || {}).value || '').trim();

          if (!password || password.length < 8) {
            show('Password must be at least 8 characters long', false);
            return;
          }
          if (password !== confirm) {
            show('Passwords do not match', false);
            return;
          }

          const original = submitBtn.innerHTML;
          submitBtn.disabled = true;
          submitBtn.innerHTML = `
            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a 8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Updating...`;

          try {
            await resetPassword(token, password);
            show('Password updated successfully. You can now sign in.', true);
            form.reset();
          } catch (err) {
            console.error('Reset password error:', err);
            show(err?.message || 'Failed to update password. The link may have expired.', false);
          } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = original;
          }
        });
      };

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
      } else {
        init();
      }
    })();
  </script>
</AuthLayout>

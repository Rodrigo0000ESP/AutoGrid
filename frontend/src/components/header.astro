---
import "../styles/global.css";
---

<div class="bg-white w-full border-b border-gray-300">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <!-- Logo -->
            <div class="flex-shrink-0">
                <a href="/" class="flex items-center gap-2 hover:cursor-pointer no-underline focus:outline-none">
                    <svg class="h-8 w-8" viewBox="0 0 32 32" fill="none">
                        <rect x="4" y="4" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="13" y="4" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="22" y="4" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="4" y="13" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="13" y="13" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="22" y="13" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="4" y="22" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <rect x="13" y="22" width="6" height="6" fill="var(--color-primary)" rx="1" />
                        <path d="M22 26L26 22L30 26L26 30L22 26Z" fill="var(--color-success)" />
                    </svg>
                    <h1 class="text-font-heading font-bold text-2xl sm:text-3xl text-[var(--color-primary)]">AutoGrid</h1>
                </a>
            </div>

            <!-- Desktop Navigation -->
            <div class="hidden md:flex items-center space-x-3">
                <a href="/login" class="bg-white text-gray-600 px-4 py-2 rounded-lg hover:text-[var(--color-primary)] hover:bg-gray-50 transition-colors text-sm font-medium focus:outline-none">
                    Sign in
                </a>
                <a href="/register" class="bg-[var(--color-primary)] text-white px-4 py-2 rounded-lg hover:bg-[#0052a3] transition-colors text-sm font-medium focus:outline-none">
                    Sign up
                </a>
            </div>

            <!-- Mobile menu button -->
            <div class="md:hidden flex items-center">
                <button type="button" id="mobile-menu-button-header" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-[var(--color-primary)]" aria-controls="mobile-menu" aria-expanded="false" >
                    <span class="sr-only">Open main menu</span>
                    <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Mobile menu, show/hide based on menu state. -->
    <div class="hidden" id="mobile-menu-header">
        <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t border-gray-200">
            <a href="/login" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-[var(--color-primary)] hover:bg-gray-50">
                Sign in
            </a>
            <a href="/register" class="block px-3 py-2 rounded-md text-base font-medium text-white bg-[var(--color-primary)] hover:bg-[#0052a3] transition-colors">
                Sign up
            </a>
        </div>
    </div>
</div>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const mobileMenu = document.getElementById('mobile-menu-header');
        const menuButton = document.getElementById('mobile-menu-button-header');
        
        if (menuButton) {
            menuButton.addEventListener('click', (e) => {
                e.preventDefault();
                mobileMenu.classList.toggle('hidden');
            });
        }
        
        document.addEventListener('click', (e) => {
            if (mobileMenu && !mobileMenu.contains(e.target) && 
                menuButton && !menuButton.contains(e.target)) {
                mobileMenu.classList.add('hidden');
            }
        });
    });
</script>